<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY I-D.ietf-teas-yang-te-topo SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-teas-yang-te-topo.xml">
<!ENTITY I-D.ietf-teas-yang-te SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-teas-yang-te.xml">
<!ENTITY RFC7926 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7926.xml">
<!ENTITY RFC8453 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8453.xml">
<!ENTITY I-D.ietf-teas-te-service-mapping-yang SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-teas-te-service-mapping-yang.xml">
<!ENTITY I-D.ietf-teas-actn-pm-telemetry-autonomics SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-teas-actn-pm-telemetry-autonomics.xml">
<!ENTITY I-D.ietf-ccamp-l1csm-yang SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-ccamp-l1csm-yang.xml">
<!ENTITY RFC8299 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8299.xml">
<!ENTITY RFC8309 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8309.xml">
<!ENTITY RFC8340 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8340.xml">
<!ENTITY RFC8345 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8345.xml">
<!ENTITY RFC8342 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8342.xml">
<!ENTITY RFC8466 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8466.xml">
<!ENTITY RFC8454 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8454.xml">
  <!ENTITY RFC6241 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6241.xml">
  <!ENTITY RFC6242 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6242.xml">
  <!ENTITY RFC8040 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8040.xml">
  <!ENTITY RFC8341 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8341.xml">
  <!ENTITY RFC8446 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
  <!ENTITY RFC6020 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6020.xml">
  <!ENTITY RFC3688 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3688.xml">

]>
<rfc submissionType="IETF" docName="draft-ietf-teas-actn-vn-yang-07" category="std" ipr="trust200902">
	<!-- Generated by id2xml 1.5.0 on 2019-10-29T05:04:27Z -->
	<?rfc compact="yes"?>
	<?rfc text-list-symbols="o*+~"?>
	<?rfc subcompact="no"?>
	<?rfc sortrefs="yes"?>
	<?rfc symrefs="yes"?>
	<?rfc strict="yes"?>
	<?rfc toc="yes"?>
	<front>
	<title abbrev="VN YANG Model">A Yang Data Model for VN Operation</title>
  <author fullname="Young Lee" initials="Y" surname="Lee" role="editor">
    <organization>SKKU</organization>
      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country/>
        </postal>
        <email>younglee.tx@gmail.com</email>
      </address>
  </author>
    <author initials="D" surname="Dhody" fullname="Dhruv Dhody" role="editor">
      <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>Divyashree Techno Park, Whitefield</street>
          <city>Bangalore</city>
          <region>Karnataka</region>
          <code>560066</code>
          <country>India</country>
        </postal>
        <email>dhruv.ietf@gmail.com</email>
      </address>
    </author>

	<author fullname="Daniele Ceccarelli" initials="D" surname="Ceccarelli">
	<organization>Ericsson</organization>
	<address><postal><street>Torshamnsgatan,48</street>
	<street>Stockholm, Sweden</street>
	</postal>
  <email>daniele.ceccarelli@ericsson.com</email>
	</address>
	</author>

	<author fullname="Igor Bryskin" initials="I" surname="Bryskin">
	<organization>Futurewei</organization>
      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country/>
        </postal>
        <email>i_bryskin@yahoo.com</email>
      </address>
	</author>

	<author fullname="Bin Yeong Yoon" initials="B" surname="Yoon">
	<organization>ETRI</organization>
      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country/>
        </postal>
        <email>byyun@etri.re.kr</email>
      </address>
      </author>

	<date year="2019"/>
	<workgroup>TEAS Working Group</workgroup>
	<abstract><t>
   This document provides a YANG data model generally applicable to any
   mode of Virtual Network (VN) operation.</t>

	</abstract>
	</front>

	<middle>
	<section title="Introduction" anchor="sect-1"><t>
   This document provides a YANG data model generally applicable to any
   mode of Virtual Network (VN) operation.</t>

	<t>
   The VN model defined in this document is applicable in generic sense
   as an independent model in and of itself. The VN model defined in
   this document can also work together with other customer service
   models such as L3SM <xref target="RFC8299"/>, L2SM <xref target="RFC8466"/> and L1CSM <xref target="I-D.ietf-ccamp-l1csm-yang"/> to
   provide a complete life-cycle service management and operations.</t>

	<t>
   The YANG model discussed in this document basically provides the
   following:</t>

	<t><list style="symbols"><t>Characteristics of Access Points (APs) that describe customer's
      end point characteristics;</t>

	<t>Characteristics of Virtual Network Access Points (VNAP) that
      describe How an AP is partitioned for multiple VNs sharing the AP
      and its reference to a Link Termination Point (LTP) of the
      Provider Edge (PE) Node;</t>

	<t>Characteristics of Virtual Networks (VNs) that describe the
      customer's VNs in terms of VN Members comprising a VN, multi-
      source and/or multi-destination characteristics of VN Member, the
      VN's reference to TE-topology's Abstract Node;</t>

	</list>
	</t>

	<t>
   The actual VN instantiation and computation is performed with
   Connectivity Matrices sub-module of TE-Topology Model <xref target="I-D.ietf-teas-yang-te-topo"/>
   which provides TE network topology abstraction and management
   operation. Once TE-topology Model is used in triggering VN
   instantiation over the networks, TE-tunnel <xref target="I-D.ietf-teas-yang-te"/> Model will
   inevitably interact with TE-Topology model for setting up actual
   tunnels and LSPs under the tunnels.</t>

	<t>
   Abstraction and Control of Traffic Engineered Networks (ACTN)
   describes a set of management and control functions used to operate
   one or more TE networks to construct virtual networks that can be
   represented to customers and that are built from abstractions of the
   underlying TE networks <xref target="RFC8453"/>. ACTN is the primary example of the
   usage of the VN Yang model.</t>

	<t>
   Sections 2 and 3 provide the discussion of how the VN Yang model is
   applicable to the ACTN context where Virtual Network Service (VNS)
   operation is implemented for the Customer Network Controller (CNC)-
   Multi-Domain Service Coordinator (MSDC) interface (CMI).</t>

	<t>
   The YANG model on the CMI is also known as customer service model in
   <xref target="RFC8309"/>. The YANG model discussed in this document is used to
   operate customer-driven VNs during the VN instantiation, VN
   computation, and its life-cycle service management and operations.</t>

	<t>
   The VN operational state is included in the same tree as the
   configuration consistent with Network Management Datastore
   Architecture (NMDA) <xref target="RFC8342"/>.  The origin of the data is indicated
   as per the origin metadata annotation.</t>

	<section title="Terminology" anchor="sect-1.1"><t>
   Refer to <xref target="RFC8453"/>, <xref target="RFC7926"/>, and <xref target="RFC8309"/> for the key terms used
   in this document.</t>

	</section>

	<section title="Tree diagram" anchor="sect-1.2"><t>
   A simplified graphical representation of the data model is used in
   Section 5 of this this document.  The meaning of the symbols in
   these diagrams is defined in <xref target="RFC8340"/>.</t>

	</section>

	<section title="Prefixes in Data Node Names" anchor="sect-1.3"><t>
   In this document, names of data nodes and other data model objects
   are prefixed using the standard prefix associated with the
   corresponding YANG imported modules, as shown in Table 1.</t>

	<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes-and-corresponding-yang-modules" style="full"><ttcol> Prefix</ttcol>
	<ttcol> YANG module</ttcol>
	<ttcol> Reference</ttcol>
	<c>vn</c>
	<c>ietf-vn</c>
	<c>[RFCXXXX]</c>
	<c>nw</c>
	<c>ietf-network</c>
	<c><xref target="RFC8345"/></c>
  <c>nt</c>
  <c>ietf-network-topology</c>
  <c><xref target="RFC8345"/></c>
	<c>te-types</c>
	<c>ietf-te-types</c>
	<c><xref target="I-D.ietf-teas-yang-te"/></c>
	<c>te-topo</c>
	<c>ietf-te-topology</c>
	<c><xref target="I-D.ietf-teas-yang-te-topo"/></c>
	</texttable>
	<t>
   Note: The RFC Editor will replace XXXX with the number assigned to
   the RFC once this draft becomes an RFC.</t>

	</section>

	</section>

	<section title="Use-case of VN Yang Model in the ACTN context" anchor="sect-2"><t>
   In this section, ACTN is being used to illustrate the general usage
   of the VN yang model. The model presented in this section has the
   following ACTN context.</t>

	<figure title="ACTN CMI" anchor="ure-actn-cmi"><artwork><![CDATA[
                          +-------+
                          |  CNC  |
                          +-------+
                              |
                              |    VN YANG + TE-topology YANG
                              |
                   +-----------------------+
                   |         MDSC          |
                   +-----------------------+
]]></artwork>
	</figure>
	<t>
   Both ACTN VN YANG and TE-topology models are used over the CMI to
   establish a VN over TE networks.</t>

	<t>
   In the context of 5G transport application, 5G Traffic Provisioning
   Manager (TPM) that provides slicing requirements to the transport
   networks (i.e., MDSC) can be considered as a type of CNC. The ACTN
   CMI provides the necessary interface functions between 5G and
   transport networks in order to facilitate dynamic VN creation and
   its lifecycle management with proper feedback loop for monitoring.</t>

	<section title="Type 1 VN" anchor="sect-2.1"><t>
   As defined in <xref target="RFC8453"/>, a Virtual Network is a customer view of the
   TE network.  To recapitulate VN types from <xref target="RFC8453"/>, Type 1 VN is
   defined as follows:</t>

	<t>
   The VN can be seen as a set of edge-to-edge abstract links (a Type 1
   VN).  Each abstract link is referred to as a VN member and is formed
   as an end-to-end tunnel across the underlying networks. Such tunnels
   may be constructed by recursive slicing or abstraction of paths in
   the underlying networks and can encompass edge points of the
   customer's network, access links, intra-domain paths, and inter-
   domain links.</t>

	<t><list style="hanging" hangIndent="-1"><t hangText="If we were to create a VN where we have four VN-members as follows:">
	<vspace blankLines="0"/>
	</t>

	</list>
	</t>

	<figure><artwork><![CDATA[
               VN-Member 1       L1-L4
               VN-Member 2       L1-L7
               VN-Member 3       L2-L4
               VN-Member 4       L3-L8
]]></artwork>
	</figure>
	<t><list hangIndent="7" style="hanging"><t>
          Where L1, L2, L3, L4, L7 and L8 correspond to a Customer
          End-Point, respectively.</t>

	</list>
	</t>

	<t>
   This VN can be modeled as one abstract node representation as
   follows in Figure 2:</t>

	<figure title="Abstract Node (One node topology)" anchor="ure-abstract-node-one-node-topology"><artwork><![CDATA[
                     +---------------+
            L1 ------|               |------ L4
            L2 ------|     AN 1      |------ L7
            L3 ------|               |------ L8
                     +---------------+
]]></artwork>
	</figure>
	<t>
   Modeling a VN as one abstract node is the easiest way for customers
   to express their end-to-end connectivity; however, customers are not
   limited to express their VN only with one abstract node. <!--In some
   cases, more than one abstract nodes can be employed to express their
   VN.--></t>

	</section>

	<section title="Type 2 VN" anchor="sect-2.2"><t>
   For some VN members of a VN, the customers are allowed to configure
   the actual path (i.e., detailed virtual nodes and virtual links)
   over the VN/abstract topology agreed mutually between CNC and MDSC
   prior to or a topology created by the MDSC as part of VN
   instantiation. <!--Type 2 VN is always built on top of a Type 1 VN.-->Type 1 VN is a higher abstraction of a Type 2 VN.</t>

	<t>
   If a Type 2 VN is desired for some or all of VN members of a type 1
   VN (see the example in <xref target="sect-2.1"/>), the TE-topology model can
   provide the following abstract topology (that consists of virtual
   nodes and virtual links) which is built under the Type 1 VN.</t>

	<figure title="Type 2 topology" anchor="ure-type-2-topology"><artwork><![CDATA[
           +----------------------------------------------+
           |             S1               S2              |
           |              O---------------O               |
           |     ________/ \______         \              |
           |    /                 \         \             |
           |S3 /                   \ S4      \ S5         |
     L1----|-O----------------------O---------O-----------|------L4
           |   \                     \         \          |
           |    \                     \         \         |
           |     \ S6                  \ S7      \ S8     |
           |      O     ----------------O---------O-------|------L7
           |     / \   /                 \   ____/        |
           |S9  /   \ /S10                \ /             |
    L2-----|---O-----O---------------------O--------------|------L8
           |  /                          S11              |
    L3-----|--                                            |
           |                                              |
           +----------------------------------------------+
]]></artwork>
	</figure>
	<t>
   As you see from Figure 3, the Type 1 abstract node is depicted as a
   Type 1 abstract topology comprising of detailed virtual nodes and
   virtual links.</t>

	<t>
   As an example, if VN-member 1 (L1-L4) is chosen to configure its own
   path over Type 2 topology, it can select, say, a path that consists
   of the ERO {S3,S4,S5} based on the topology and its service
   requirement.  This capability is enacted via TE-topology
   configuration by the customer.</t>

	</section>

	</section>

	<section title="High-Level Control Flows with Examples" anchor="sect-3"><section title="Type 1 VN Illustration" anchor="sect-3.1"><t><list style="hanging" hangIndent="-1"><t hangText="If we were to create a VN where we have four VN-members as follows:">
	<vspace blankLines="0"/>
	</t>

	</list>
	</t>

	<figure><artwork><![CDATA[
               VN-Member 1       L1-L4
               VN-Member 2       L1-L7
               VN-Member 3       L2-L4
               VN-Member 4       L3-L8
]]></artwork>
	</figure>
	<t>
   Where L1, L2, L3, L4, L7 and L8 correspond to Access Points.</t>

	<t>
   This VN can be modeled as one abstract node representation as
   follows:</t>

	<figure><artwork><![CDATA[
                     +---------------+
            L1 ------|               |------ L4
            L2 ------|     AN 1      |------ L7
            L3 ------|               |------ L8
                     +---------------+
]]></artwork>
	</figure>
	<t>
   If this VN is Type 1, the following diagram shows the message flow
   between CNC and MDSC to instantiate this VN using VN and TE-Topology
   Models.</t>

	<figure><artwork><![CDATA[
           +--------+                        +--------+
            |  CNC   |                        |  MDSC  |
            +--------+                        +--------+
                 |                                 |
                 |                                 |
CNC POST TE-topo |  POST /nw:networks/nw:network/  |
model(with Conn. |  nw:node/te-node-id/            |
Matrix on one    |  tet:connectivity-matrices/     |
Abstract node    |  tet:connectivity-matrix        |
                 |-------------------------------->|
                 |                   HTTP 200      |
                 |<--------------------------------|
                 |                                 |
CNC POST the     |  POST /VN                       |
VN identifying   |-------------------------------->| If there is
AP, VNAP and VN- |                                 | multi-src/dest
Members and maps |                                 | then MDSC 
to the TE-topo   |                 HTTP 200        | selects a
                 |<--------------------------------| src or dest
                 |                                 | and update
                 |                                 | VN YANG
CNC GET the      |  GET /VN                        |
VN YANG status   |-------------------------------->|
                 |                                 |
                 |  HTTP 200 (VN with status:      |
                 |  selected VN-members            |
                 |  in case of multi s-d)          |
                 |<--------------------------------|
                 |                                 |
]]></artwork>
	</figure>
	</section>

	<section title="Type 2 VN Illustration" anchor="sect-3.2"><t>
   For some VN members, the customer may want to "configure" explicit
   routes over the path that connects its two end-points. Let us
   consider the following example.</t>

	<t><list style="empty" hangIndent="15">
	<t><list style="hanging" hangIndent="-1"><t hangText="VN-Member 1">
	L1-L4 (via S3, S4, and S5)
	<vspace blankLines="0"/>
	</t>

	<t hangText="VN-Member 2">
	L1-L7 (via S3, S4, S7 and S8)
	<vspace blankLines="0"/>
	</t>

	<t hangText="VN-Member 3">
	L2-L7 (via S9, S10, and S11)
	<vspace blankLines="0"/>
	</t>

	<t hangText="VN-Member 4">
	L3-L8 (via S9, S10 and S11)
	<vspace blankLines="0"/>
	</t>

	</list>
	</t>

	</list>
	</t>

	<t>
   Where the following topology is the underlay for Abstraction Node 1
   (AN1).</t>

	<figure><artwork><![CDATA[
                                AN1
           ............................................
           .             S1               S2          .
           .              O---------------O           .
           .     ________/ \______         \          .
           .    /                 \         \         .
           . S3/                   \ S4      \ S5     .
     L1----.-O----------------------O---------O-------.----------L4
           .  \                      \         \      .
           .   \                      \         \     .
           .    \ S6                   \ S7      \ S8 .
           .      O     ----------------O---------O---.----------L5
           .     / \   /                 \   ____/ \__.__________L6
           .S9  /   \ /S10                \ /         .
    L2-----.---O-----O---------------------O----------.----------L7
           .  /                          S11\_________.__________L8
    L3-----.--                                        .
           ............................................
]]></artwork>
	</figure>
	<t>
   There are two options depending on whether CNC or MDSC creates the
   single abstract node topology.</t>

	<t>
   Case 1:</t>

	<t>
   If CNC creates the single abstract node topology, the following
   diagram shows the message flow between CNC and MDSC to instantiate
   this VN using VN and TE-Topology Model.</t>

	<figure><artwork><![CDATA[
            +--------+                                +--------+
            |  CNC   |                                |  MDSC  |
            +--------+                                +--------+
                 |                                         |
                 |                                         |
CNC POST TE-topo |  POST /nw:networks/nw:network/          |
model(with Conn. |  nw:node/te-node-id/tet:connectivity-   |
Matrix on one    |  matrices/tet:connectivity-matrix       |
Abstract node and|---------------------------------------->|
Explicit paths in|                                         |
The conn. Matrix |                       HTTP 200          |
                 |<----------------------------------------|
                 |                                         |
CNC POST the     |  POST /VN                               |
VN identifying   |---------------------------------------->|
AP, VNAP and VN- |                                         |
Members and maps |                                         |
to the TE-topo   |                         HTTP 200        |
                 |<----------------------------------------|
                 |                                         |
                 |                                         |
CNC GET the      |  GET /VN                                |
VN YANG status   |---------------------------------------->|
                 |                                         |
                 |  HTTP 200 (VN with status)              |
                 |<----------------------------------------|
                 |                                         |

Case 2:
]]></artwork>
	</figure>
	<t>
   On the other hand, if MDSC create the single abstract node topology
   based VN YANG posted by the CNC, the following diagram shows the
   message flow between CNC and MDSC to instantiate this VN using VN
   and TE-Topology Models.</t>

	<figure><artwork><![CDATA[
            +--------+                        +--------+
            |  CNC   |                        |  MDSC  |
            +--------+                        +--------+
                 |                                 |
                 |                                 |
CNC POST VN      |                                 |
Identifying AP,  |                                 |
VNAP and VN-     |  POST /VN                       | MDSC populates
Members          |-------------------------------->| a single Abst.
                 |                 HTTP 200        | node topology
                 |<--------------------------------| by itself
                 |                                 |
CNC GET VN &     |  GET /VN  &                     |
POST TE-Topo     |  POST /nw:networks/nw:network/  |
Models (with     |  nw:node/te-node-id/tet:        |
Conn. Matrix on  |  connectivity-matrices/         |
                 |  tet:connectivity-matrix        |
the Abstract Node|-------------------------------->|
and explicit     |                                 |
paths in the     |                                 |
Conn. Matrix     |                                 |
                 |                 HTTP 200        |
                 |<--------------------------------|
                 |                                 |
                 |                                 |
CNC GET the      |  GET /VN                        |
VN YANG status   |-------------------------------->|
                 |                                 |
                 |  HTTP 200 (VN with status)      |
                 |<--------------------------------|
                 |                                 |
]]></artwork>
	</figure>
	<t>
   <xref target="sect-7"/> provides JSON examples for both VN model and TE-topology
   Connectivity Matrix sub-model to illustrate how a VN can be created
   by the CNC making use of the VN module as well as the TE-topology
   Connectivity Matrix module.</t>
<section title="VN and AP Usage" anchor="sect-3.3">
    <t>The customer access information may be known at the time of VN creation. A shared logical AP identifier is used between the customer and the operator to identify the access link between Customer Edge (CE) and Provider Edge (PE) . This is described in Section 6 of <xref target="RFC8453"/>.</t> 
    <t>In some VN operations, the customer access may not be known at the initial VN creation. The VN operation allow a creation of VN with only PE identifier as well. The customer access information could be added later.</t>
    <t>To achieve this the 'ap' container has a leaf for 'pe' node that allows AP to be created with PE information. The vn-member (and vn) could use APs that only have PE information initially.</t>
  </section>
  
	</section>
  </section>

	<section title="VN Model Usage" anchor="sect-4">
    <section title="Customer view of VN" anchor="sect-4.1"><t>
   The VN-Yang model allows to define a customer view, and allows the
   customer to communicate using the VN constructs as described in the
   <xref target="RFC8454"/>. It also allows to group the set of edge-to-edge links
   (i.e., VN members) under a common umbrella of VN. This allows the
   customer to instantiate and view the VN as one entity, making it
   easier for some customers to work on VN without worrying about the
   details of the provider based YANG models.</t>

	<t>
   This is similar to the benefits of having a separate YANG model for
   the customer services as described in <xref target="RFC8309"/>, which states that
   service models do not make any assumption of how a service is
   actually engineered and delivered for a customer.</t>

	</section>

	<section title="Auto-creation of VN by MDSC" anchor="sect-4.2"><t>
   The VN could be configured at the MDSC explicitly by the CNC using
   the VN yang model. In some other cases, the VN is not explicitly
   configured, but created automatically by the MDSC based on the
   customer service model and local policy, even in these case the VN
   yang model can be used by the CNC to learn details of the underlying
   VN created to meet the requirements of customer service model.</t>

	</section>

	<section title="Innovative Services" anchor="sect-4.3"><section title="VN Compute" anchor="sect-4.3.1"><t>
   VN Model supports VN compute (pre-instantiation mode) to view the
   full VN as a single entity before instantiation. Achieving this via
   path computation or "compute only" tunnel setup does not provide the
   same functionality.</t>

	</section>

	<section title="Multi-sources and Multi-destinations" anchor="sect-4.3.2"><t>
   In creating a virtual network, the list of sources or destinations
   or both may not be pre-determined by the customer. For instance, for
   a given source, there may be a list of multiple-destinations to
   which the optimal destination may be chosen depending on the network
   resource situations. Likewise, for a given destination, there may
   also be multiple-sources from which the optimal source may be
   chosen. In some cases, there may be a pool of multiple sources and
   destinations from which the optimal source-destination may be
   chosen. The following YANG module is shown for describing source
   container and destination container. The following YANG tree shows
   how to model multi-sources and multi-destinations.</t>

	<figure><artwork><![CDATA[
  +--rw vn
     +--rw vn-list* [vn-id]
        +--rw vn-id                 uint32
        +--rw vn-name?              string
        +--rw vn-topology-id?       te-types:te-topology-id
        +--rw abstract-node?
        |       -> /nw:networks/network/node/tet:te-node-id
        +--rw vn-member-list* [vn-member-id]
        |  +--rw vn-member-id              uint32
        |  +--rw src
        |  |  +--rw src?
        |  |  |       -> /ap/access-point-list/access-point-id
        |  |  +--rw src-vn-ap-id?
        |  |  |       -> /ap/access-point-list/vn-ap/vn-ap-id
        |  |  +--rw multi-src?      boolean {multi-src-dest}?
        |  +--rw dest
        |  |  +--rw dest?
        |  |  |       -> /ap/access-point-list/access-point-id
        |  |  +--rw dest-vn-ap-id?
        |  |  |       -> /ap/access-point-list/vn-ap/vn-ap-id
        |  |  +--rw multi-dest?      boolean {multi-src-dest}?
        |  +--rw connectivity-matrix-id?   leafref
        |  +--ro oper-status?              identityref
        +--ro if-selected?          boolean {multi-src-dest}?
        +--rw admin-status?         identityref
        +--ro oper-status?          identityref
        +--rw vn-level-diversity?   vn-disjointness
]]></artwork>
	</figure>
	</section>

	<section title="Others" anchor="sect-4.3.3"><t>
   The VN Yang model can be easily augmented to support the mapping of
   VN to the Services such as L3SM and L2SM as described in <xref target="I-D.ietf-teas-te-service-mapping-yang"/>.</t>

	<t>
   The VN Yang model can be extended to support telemetry, performance
   monitoring and network autonomics as described in <xref target="I-D.ietf-teas-actn-pm-telemetry-autonomics"/>.</t>

	</section>

	<section title="Summary" anchor="sect-4.3.4"><t>
   This section summarizes the innovative service features of the VN
   Yang.</t>
	
	<t><list style="symbols">
    <t>Maintenance of AP and VNAP along with VN</t>

	<t>VN construct to group of edge-to-edge links</t>

	<t>VN Compute (pre-instantiate)</t>

	<t>Multi-Source / Multi-Destination</t>

	<t>Ability to support various VN and VNS Types
    <list style="symbols">
      <t>VN Type 1: Customer configures the VN as a set of VN
             Members.
             No other details need to be set by customer, making for a
             simplified operations for the customer.</t>

	<t>VN Type 2: Along with VN Members, the customer could also
             provide an abstract topology, this topology is provided by
             the Abstract TE Topology Yang Model.</t>

	</list>
	</t>

	</list>
	</t>

	

	</section>

	</section>

	</section>

	<section title="VN YANG Model (Tree Structure)" anchor="sect-5"><figure><artwork><![CDATA[
module: ietf-vn
  +--rw ap
  |  +--rw access-point-list* [access-point-id]
  |     +--rw access-point-id      uint32
  |     +--rw access-point-name?   string
  |     +--rw pe?
  |     |       -> /nw:networks/network/node/tet:te-node-id
  |     +--rw max-bandwidth?       te-types:te-bandwidth
  |     +--rw avl-bandwidth?       te-types:te-bandwidth
  |     +--rw vn-ap* [vn-ap-id]
  |        +--rw vn-ap-id         uint32
  |        +--rw vn?              -> /vn/vn-list/vn-id
  |        +--rw abstract-node?
  |        |       -> /nw:networks/network/node/tet:te-node-id
  |        +--rw ltp?             leafref
  +--rw vn
     +--rw vn-list* [vn-id]
        +--rw vn-id                 uint32
        +--rw vn-name?              string
        +--rw vn-topology-id?       te-types:te-topology-id
        +--rw abstract-node?
        |       -> /nw:networks/network/node/tet:te-node-id
        +--rw vn-member-list* [vn-member-id]
        |  +--rw vn-member-id              uint32
        |  +--rw src
        |  |  +--rw src?
        |  |  |       -> /ap/access-point-list/access-point-id
        |  |  +--rw src-vn-ap-id?
        |  |  |       -> /ap/access-point-list/vn-ap/vn-ap-id
        |  |  +--rw multi-src?      boolean {multi-src-dest}?
        |  +--rw dest
        |  |  +--rw dest?
        |  |  |       -> /ap/access-point-list/access-point-id
        |  |  +--rw dest-vn-ap-id?
        |  |  |       -> /ap/access-point-list/vn-ap/vn-ap-id
        |  |  +--rw multi-dest?      boolean {multi-src-dest}?
        |  +--rw connectivity-matrix-id?   leafref
        |  +--ro oper-status?              identityref
        +--ro if-selected?          boolean {multi-src-dest}?
        +--rw admin-status?         identityref
        +--ro oper-status?          identityref
        +--rw vn-level-diversity?   vn-disjointness

  rpcs:
    +---x vn-compute
       +---w input
       |  +---w abstract-node?
       |  |       -> /nw:networks/network/node/tet:te-node-id
       |  +---w vn-member-list* [vn-member-id]
       |  |  +---w vn-member-id              uint32
       |  |  +---w src
       |  |  |  +---w src?
       |  |  |  |       -> /ap/access-point-list/access-point-id
       |  |  |  +---w src-vn-ap-id?
       |  |  |  |       -> /ap/access-point-list/vn-ap/vn-ap-id
       |  |  |  +---w multi-src?      boolean {multi-src-dest}?
       |  |  +---w dest
       |  |  |  +---w dest?
       |  |  |  |       -> /ap/access-point-list/access-point-id
       |  |  |  +---w dest-vn-ap-id?
       |  |  |  |       -> /ap/access-point-list/vn-ap/vn-ap-id
       |  |  |  +---w multi-dest?      boolean {multi-src-dest}?
       |  |  +---w connectivity-matrix-id?   leafref
       |  +---w vn-level-diversity?   vn-disjointness
       +--ro output
          +--ro vn-member-list* [vn-member-id]
             +--ro vn-member-id              uint32
             +--ro src
             |  +--ro src?
             |  |       -> /ap/access-point-list/access-point-id
             |  +--ro src-vn-ap-id?
             |  |       -> /ap/access-point-list/vn-ap/vn-ap-id
             |  +--ro multi-src?      boolean {multi-src-dest}?
             +--ro dest
             |  +--ro dest?
             |  |       -> /ap/access-point-list/access-point-id
             |  +--ro dest-vn-ap-id?
             |  |       -> /ap/access-point-list/vn-ap/vn-ap-id
             |  +--ro multi-dest?      boolean {multi-src-dest}?
             +--ro connectivity-matrix-id?   leafref
             +--ro if-selected?              boolean
             |       {multi-src-dest}?
             +--ro compute-status?           identityref
]]></artwork>
	</figure>
	</section>

	<section title="VN YANG Code" anchor="sect-6"><t>
   The YANG code is as follows:</t>

	<figure><artwork><![CDATA[
<CODE BEGINS> file "ietf-vn@2019-10-31.yang"
module ietf-vn {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-vn";
  prefix vn;

  /* Import network */

  import ietf-network {
    prefix nw;
    reference
      "RFC 8345: A YANG Data Model for Network Topologies";
  }

  /* Import network topology */

  import ietf-network-topology {
    prefix nt;
    reference
      "RFC 8345: A YANG Data Model for Network Topologies";
  }

  /* Import TE Common types */

  import ietf-te-types {
    prefix te-types;
    reference
      "I-D.ietf-teas-yang-te-types: Traffic Engineering Common
       YANG Types";
  }

  /* Import TE Topology */

  import ietf-te-topology {
    prefix tet;
    reference
      "I-D.ietf-teas-yang-te-topo: YANG Data Model for Traffic
       Engineering (TE) Topologies";
  }

  organization
    "IETF Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:  <https://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>
     Editor: Young Lee <younglee.tx@gmail.com>
           : Dhruv Dhody <dhruv.ietf@gmail.com>";
  description
    "This module contains a YANG module for the VN. It describes a
     VN operation module that takes place in the context of the
     CNC-MDSC Interface (CMI) of the ACTN architecture where the
     CNC is the actor of a VN Instantiation/modification/deletion.";

  revision 2019-10-31 {
    description
      "initial version.";
    reference
      "RFC XXXX: A Yang Data Model for VN Operation";
  }

  /* Features */

  feature multi-src-dest {
    description
      "Support for selection of one src or destination
       among multiple.";
  }

  /* Identity VN State*/

  identity vn-state-type {
    description
      "Base identity for VN state";
  }

  identity vn-state-up {
    base vn-state-type;
    description
      "VN state up";
  }

  identity vn-state-down {
    base vn-state-type;
    description
      "VN state down";
  }

  /* Identity VN Admin State*/

  identity vn-admin-state-type {
    description
      "Base identity for VN admin states";
  }

  identity vn-admin-state-up {
    base vn-admin-state-type;
    description
      "VN administratively state up";
  }

  identity vn-admin-state-down {
    base vn-admin-state-type;
    description
      "VN administratively state down";
  }

  /* Identity VN Compute State*/

  identity vn-compute-state-type {
    description
      "Base identity for compute states";
  }

  identity vn-compute-state-computing {
    base vn-compute-state-type;
    description
      "State path compute in progress";
  }

  identity vn-compute-state-computation-ok {
    base vn-compute-state-type;
    description
      "State path compute successful";
  }

  identity vn-compute-state-computatione-failed {
    base vn-compute-state-type;
    description
      "State path compute failed";
  }

  /* typedef */

  typedef vn-disjointness {
    type bits {
      bit node {
        position 0;
        description
          "node disjoint";
      }
      bit link {
        position 1;
        description
          "link disjoint";
      }
      bit srlg {
        position 2;
        description
          "srlg disjoint";
      }
    }
    description
      "type of the resource disjointness for VN level applied
       across all VN members in a VN";
  }

  /* Groupings */

  grouping vn-ap {
    description
      "VNAP related information";
    leaf vn-ap-id {
      type uint32;
      description
        "unique identifier for the referred VNAP";
    }
    leaf vn {
      type leafref {
        path "/vn/vn-list/vn-id";
      }
      description
        "reference to the VN";
    }
    leaf abstract-node {
      type leafref {
        path "/nw:networks/nw:network/nw:node/tet:te-node-id";
      }
      description
        "a reference to the abstract node in TE Topology that
         represent the VN";
    }
    leaf ltp {
      type leafref {
        path "/nw:networks/nw:network/nw:node/"
           + "nt:termination-point/tet:te-tp-id";
      }
      description
        "Reference LTP in the TE-topology";
    }
  }//vn-ap

  grouping access-point {
    description
      "AP related information";
    leaf access-point-id {
      type uint32;
      description
        "unique identifier for the referred access point";
    }
    leaf access-point-name {
      type string;
      description
        "ap name";
    }
    leaf pe {
      type leafref {
        path "/nw:networks/nw:network/nw:node/tet:te-node-id";
      }
      description
        "a reference to the PE node in the native TE Topology";
    }
    leaf max-bandwidth {
      type te-types:te-bandwidth;
      description
        "max bandwidth of the AP";
    }
    leaf avl-bandwidth {
      type te-types:te-bandwidth;
      description
        "available bandwidth of the AP";
    }
    /*add details and any other properties of AP,
    not associated by a VN
    CE port, PE port etc.
     */
    list vn-ap {
      key "vn-ap-id";
      uses vn-ap;
      description
        "list of VNAP in this AP";
    }
  }//access-point

  grouping vn-member {
    description
      "vn-member is described by this container";
    leaf vn-member-id {
      type uint32;
      description
        "vn-member identifier";
    }
    container src {
      description
        "the source of VN Member";
      leaf src {
        type leafref {
          path "/ap/access-point-list/access-point-id";
        }
        description
          "reference to source AP";
      }
      leaf src-vn-ap-id {
        type leafref {
          path "/ap/access-point-list/vn-ap/vn-ap-id";
        }
        description
          "reference to source VNAP";
      }
      leaf multi-src {
        if-feature "multi-src-dest";
        type boolean;
        description
          "Is source part of multi-source, where
           only one of the source is enabled";
      }
    }
    container dest {
      description
        "the destination of VN Member";
      leaf dest {
        type leafref {
          path "/ap/access-point-list/access-point-id";
        }
        description
          "reference to destination AP";
      }
      leaf dest-vn-ap-id {
        type leafref {
          path "/ap/access-point-list/vn-ap/vn-ap-id";
        }
        description
          "reference to dest VNAP";
      }
      leaf multi-dest {
        if-feature "multi-src-dest";
        type boolean;
        description
          "Is destination part of multi-destination, where only one
           of the destination is enabled";
      }
    }
    leaf connectivity-matrix-id {
      type leafref {
        path "/nw:networks/nw:network/nw:node/tet:te/"
           + "tet:te-node-attributes/"
           + "tet:connectivity-matrices/"
           + "tet:connectivity-matrix/tet:id";
      }
      description
        "reference to connectivity-matrix";
    }
  }//vn-member

  grouping vn-policy {
    description
      "policy for VN-level diverisity";
    leaf vn-level-diversity {
      type vn-disjointness;
      description
        "the type of disjointness on the VN level (i.e., across all
         VN members)";
    }
  }

  /* Configuration data nodes */

  container ap {
    description
      "AP configurations";
    list access-point-list {
      key "access-point-id";
      description
        "access-point identifier";
      uses access-point {
        description
          "access-point information";
      }
    }
  }
  container vn {
    description
      "VN configurations";
    list vn-list {
      key "vn-id";
      description
        "a virtual network is identified by a vn-id";
      leaf vn-id {
        type uint32;
        description
          "a unique vn identifier";
      }
      leaf vn-name {
        type string;
        description
          "vn name";
      }
      leaf vn-topology-id {
        type te-types:te-topology-id;
        description
          "An optional identifier to the TE Topology Model where the
           abstract nodes and links of the Topology can be found for
           Type 2 VNS";
      }
      leaf abstract-node {
        type leafref {
          path "/nw:networks/nw:network/nw:node/tet:te-node-id";
        }
        description
          "a reference to the abstract node in TE Topology";
      }
      list vn-member-list {
        key "vn-member-id";
        description
          "List of VN-members in a VN";
        uses vn-member;
        leaf oper-status {
          type identityref {
            base vn-state-type;
          }
          config false;
          description
            "VN-member operational state.";
        }
      }
      leaf if-selected {
        if-feature "multi-src-dest";
        type boolean;
        default "false";
        config false;
        description
          "Is the vn-member is selected among the multi-src/dest
           options";
      }
      leaf admin-status {
        type identityref {
          base vn-admin-state-type;
        }
        default "vn-admin-state-up";
        description
          "VN administrative state.";
      }
      leaf oper-status {
        type identityref {
          base vn-state-type;
        }
        config false;
        description
          "VN operational state.";
      }
      uses vn-policy;
    }//vn-list
  }//vn

  /* RPC */

  rpc vn-compute {
    description
      "The VN computation without actual instantiation";
    input {
      leaf abstract-node {
        type leafref {
          path "/nw:networks/nw:network/nw:node/tet:te-node-id";
        }
        description
          "a reference to the abstract node in TE Topology";
      }
      list vn-member-list {
        key "vn-member-id";
        description
          "List of VN-members in a VN";
        uses vn-member;
      }
      uses vn-policy;
    }
    output {
      list vn-member-list {
        key "vn-member-id";
        description
          "List of VN-members in a VN";
        uses vn-member;
        leaf if-selected {
          if-feature "multi-src-dest";
          type boolean;
          default "false";
          description
            "Is the vn-member is selected among the multi-src/dest
             options";
        }
        leaf compute-status {
          type identityref {
            base vn-compute-state-type;
          }
          description
            "VN-member compute state.";
        }
      }
    }
  }//vn-compute
}
<CODE ENDS>
]]></artwork>
	</figure>
	</section>

	<section title="JSON Example" anchor="sect-7"><t>
   This section provides json implementation examples as to how VN YANG
   model and TE topology model are used together to instantiate virtual
   networks.</t>

	<t>
   The example in this section includes following VN</t>

	<t><list style="symbols"><t>VN1 (Type 1): Which maps to the single node topology abstract1
      (node D1) and consist of VN Members 104 (L1 to L4), 107 (L1 to
      L7), 204 (L2 to L4), 308 (L3 to L8) and 108 (L1 to L8). We also
      show how disjointness (node, link, srlg) is supported in the
      example on the global level (i.e., connectivity matrices level).</t>

	<t>VN2 (Type 2): Which maps to the single node topology abstract2
      (node D2), this topology has an underlay topology (absolute) (see
      figure in section 3.2). This VN has a single VN member 105 (L1 to
      L5) and an underlay path (S4 and S7) has been set in the
      connectivity matrix of abstract2 topology;</t>

	<t>VN3 (Type 1): This VN has a multi-source, multi-destination
      feature enable for VN Member 104 (L1 to L4)/107 (L1 to L7)
      {multi-src} and VN Member 204 (L2 to L4)/304 (L3 to L4) {multi-dest} usecase. The selected VN-member is known via the field "if-selected" and the corresponding connectivity-matrix-id.</t>

	</list>
	</t>

	<t>
   Note that the VN YANG model also include the AP and VNAP which shows
   various VN using the same AP.</t>
<section title="VN JSON" anchor="sect-7-1">
	<figure><artwork><![CDATA[
  {
        "ap":{
           "access-point-list": [
                {
                 "access-point-id": 101,
                 "access-point-name": "101",
                 "vn-ap": [
                    {
                       "vn-ap-id": 10101,
                       "vn": 1,
                       "abstract-node": "D1",
                       "ltp": "1-0-1"
                    },
                    {
                       "vn-ap-id": 10102,
                       "vn": 2,
                       "abstract-node": "D2",
                       "ltp": "1-0-1"
                    },
                    {
                       "vn-ap-id": 10103,
                       "vn": 3,
                       "abstract-node": "D3",
                       "ltp": "1-0-1"
                    },
                 ]
              },
              {
                 "access-point-id": 202,
                 "access-point-name": "202",
                 "vn-ap": [
                    {
                       "vn-ap-id": 20201,
                       "vn": 1,
                       "abstract-node": "D1",
                       "ltp": "2-0-2"
                    }
                 ]
              },
              {
                 "access-point-id": 303,
                 "access-point-name": "303",
                 "vn-ap": [
                    {
                       "vn-ap-id": 30301,
                       "vn": 1,
                       "abstract-node": "D1",
                       "ltp": "3-0-3"
                    },
                    {
                       "vn-ap-id": 30303,
                       "vn": 3,
                       "abstract-node": "D3",
                       "ltp": "3-0-3"
                    }
                 ]
              },
              {
                 "access-point-id": 440,
                 "access-point-name": "440",
                 "vn-ap": [
                    {
                       "vn-ap-id": 44001,
                       "vn": 1,
                       "abstract-node": "D1",
                       "ltp": "4-4-0"
                    }
                 ]
              },
              {
                 "access-point-id": 550,
                 "access-point-name": "550",
                 "vn-ap": [
                    {
                       "vn-ap-id": 55002,
                       "vn": 2,
                       "abstract-node": "D2",
                       "ltp": "5-5-0"
                    }
                 ]
              },
              {
                 "access-point-id": 770,
                 "access-point-name": "770",
                 "vn-ap": [
                    {
                       "vn-ap-id": 77001,
                       "vn": 1,
                       "abstract-node": "D1",
                       "ltp": "7-7-0"
                    },
                    {
                       "vn-ap-id": 77003,
                       "vn": 3,
                       "abstract-node": "D3",
                       "ltp": "7-7-0"
                    }
                 ]
              },
              {
                 "access-point-id": 880,
                 "access-point-name": "880",
                 "vn-ap": [
                    {
                       "vn-ap-id": 88001,
                       "vn": 1,
                       "abstract-node": "D1",
                       "ltp": "8-8-0"
                    },
                    {
                       "vn-ap-id": 88003,
                       "vn": 3,
                       "abstract-node": "D3",
                       "ltp": "8-8-0"
                    }
                 ]
              }
           ]
        },
        "vn":{
           "vn-list": [
              {
                 "vn-id": 1,
                 "vn-name": "vn1",
                 "vn-topology-id": "te-topology:abstract1",
                 "abstract-node": "D1",
                 "vn-member-list": [
                    {
                       "vn-member-id": 104,
                       "src": {
                          "src": 101,
                          "src-vn-ap-id": 10101,
                       },
                       "dest": {
                          "dest": 440,
                          "dest-vn-ap-id": 44001,
                       },
                       "connectivity-matrix-id": 104
                    },
                    {
                       "vn-member-id": 107,
                       "src": {
                          "src": 101,
                          "src-vn-ap-id": 10101,
                       },
                       "dest": {
                          "dest": 770,
                          "dest-vn-ap-id": 77001,
                       },
                       "connectivity-matrix-id": 107
                    },
                    {
                       "vn-member-id": 204,
                       "src": {
                          "src": 202,
                          "dest-vn-ap-id": 20401,
                       },
                       "dest": {
                          "dest": 440,
                          "dest-vn-ap-id": 44001,
                       },
                       "connectivity-matrix-id": 204
                    },
                    {
                       "vn-member-id": 308,
                       "src": {
                          "src": 303,
                          "src-vn-ap-id": 30301,
                       },
                       "dest": {
                          "dest": 880,
                          "src-vn-ap-id": 88001,
                       },
                       "connectivity-matrix-id": 308
                    },
                    {
                       "vn-member-id": 108,
                       "src": {
                          "src": 101,
                          "src-vn-ap-id": 10101,
                       },
                       "dest": {
                          "dest": 880,
                          "dest-vn-ap-id": 88001,
                       },
                       "connectivity-matrix-id": 108
                    }
                 ]
              },
              {
                 "vn-id": 2,
                 "vn-name": "vn2",
                 "vn-topology-id": "te-topology:abstract2",
                 "abstract-node": "D2",
                 "vn-member-list": [
                    {
                       "vn-member-id": 105,
                       "src": {
                          "src": 101,
                          "src-vn-ap-id": 10102,
                       },
                       "dest": {
                          "dest": 550,
                          "dest-vn-ap-id": 55002,
                       },
                       "connectivity-matrix-id": 105
                    }
                 ]
              },
              {
                 "vn-id": 3,
                 "vn-name": "vn3",
                 "vn-topology-id": "te-topology:abstract3",
                 "abstract-node": "D3",
                 "vn-member-list": [
                    {
                       "vn-member-id": 104,
                       "src": {
                          "src": 101,
                       },
                       "dest": {
                          "dest": 440,
                          "multi-dest": true
                       }
                    },
                    {
                       "vn-member-id": 107,
                       "src": {
                          "src": 101,
                          "src-vn-ap-id": 10103,
                       },
                       "dest": {
                          "dest": 770,
                          "dest-vn-ap-id": 77003,
                          "multi-dest": true
                       },
                       "connectivity-matrix-id": 107,
                       "if-selected":true,
                    },
                    {
                       "vn-member-id": 204,
                       "src": {
                          "src": 202,
                          "multi-src": true,
                       },
                       "dest": {
                          "dest": 440,
                       },
                    },
                    {
                       "vn-member-id": 304,
                       "src": {
                          "src": 303,
                          "src-vn-ap-id": 30303,
                          "multi-src": true,
                       },
                       "dest": {
                          "dest": 440,
                          "src-vn-ap-id": 44003,
                       },
                       "connectivity-matrix-id": 304,
                       "if-selected":true,
                    },
                 ]
              },

           ]
        }

     }
  }
]]></artwork>
  </figure>  
</section>
<section title="TE-topology JSON" anchor="sect-7-2">
<figure><artwork><![CDATA[

  {
       "networks": {
         "network": [
           {
             "network-types": {
               "te-topology": {}
             },
             "network-id": "abstract1",
             "provider-id": 201,
             "client-id": 600,
             "te-topology-id": "te-topology:abstract1",
             "node": [
               {
                 "node-id": "D1",
                 "te-node-id": "2.0.1.1",
                 "te": {

                   "te-node-attributes": {
                     "domain-id" : 1,
                     "is-abstract": [null],
                     "connectivity-matrices": {
                       "is-allowed": true,
                       "path-constraints": {
                         "bandwidth-generic": {
                           "te-bandwidth": {
                             "generic": [
                               {
                                 "generic": "0x1p10",
                               }
                             ]
                           }
                         }
                         "disjointness": "node link srlg",

                       },
                       "connectivity-matrix": [
                         {
                           "id": 104,
                           "from": "1-0-1",
                           "to": "4-4-0"
                         },
                         {
                           "id": 107,
                           "from": "1-0-1",
                           "to": "7-7-0"
                         },
                         {
                           "id": 204,
                           "from": "2-0-2",
                           "to": "4-4-0"
                         },
                         {
                           "id": 308,
                           "from": "3-0-3",
                           "to": "8-8-0"
                         },
                         {
                           "id": 108,
                           "from": "1-0-1",
                           "to": "8-8-0"
                         },
                       ]
                     }
                   }
                 },
                 "termination-point": [

                   {
                     "tp-id": "1-0-1",
                     "te-tp-id": 10001,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                           }
                       ]
                     }
                   },
                   {
                     "tp-id": "1-1-0",
                     "te-tp-id": 10100,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                             "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "2-0-2",
                     "te-tp-id": 20002,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "2-2-0",
                     "te-tp-id": 20200,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {

                     "tp-id": "3-0-3",
                     "te-tp-id": 30003,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "3-3-0",
                     "te-tp-id": 30300,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "4-0-4",
                     "te-tp-id": 40004,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "4-4-0",
                     "te-tp-id": 40400,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "5-0-5",
                     "te-tp-id": 50005,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "5-5-0",
                     "te-tp-id": 50500,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "6-0-6",
                     "te-tp-id": 60006,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "6-6-0",
                     "te-tp-id": 60600,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "7-0-7",
                     "te-tp-id": 70007,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "7-7-0",
                     "te-tp-id": 70700,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "8-0-8",
                     "te-tp-id": 80008,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "8-8-0",
                     "te-tp-id": 80800,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   }
                 ]
               }
             ]
           },
           {
             "network-types": {
               "te-topology": {}
             },
             "network-id": "abstract2",
             "provider-id": 201,
             "client-id": 600,
             "te-topology-id": "te-topology:abstract2",
             "node": [
              {
                 "node-id": "D2",
                 "te-node-id": "2.0.1.2",
                 "te": {
                   "te-node-attributes": {
                     "domain-id" : 1,
                     "is-abstract": [null],
                     "connectivity-matrices": {
                       "is-allowed": true,
                       "underlay": {
                          "enabled": true
                       },
                       "path-constraints": {
                         "bandwidth-generic": {
                           "te-bandwidth": {
                             "generic": [
                               {
                                 "generic": "0x1p10"
                               }
                             ]
                           }
                         }
                       },
                       "optimizations": {
                          "objective-function": {
                              "objective-function-type": 
                              "of-maximize-residual-bandwidth"
                          }
                       },
                       "connectivity-matrix": [
                         {
                           "id": 105,
                           "from": "1-0-1",
                           "to": "5-5-0",
                           "underlay": {
                              "enabled": true,
                              "primary-path": {
                                  "network-ref": "absolute",
                                  "path-element": [
                                    {

                                      "path-element-id": 1,
                                      "index": 1,
                                      "numbered-hop": {
                                        "address": "4.4.4.4",
                                        "hop-type": "STRICT"
                                       }
                                     },
                                     {
                                      "path-element-id": 2,
                                      "index": 2,
                                      "numbered-hop": {
                                        "address": "7.7.7.7",
                                        "hop-type": "STRICT"
                                      }
                                     }
                                  ]
                              }
                           }
                         }
                       ]
                     }
                   }
                 },
                 "termination-point": [
                   {
                     "tp-id": "1-0-1",
                     "te-tp-id": 10001,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                           }
                       ]
                     }
                   },
                   {
                     "tp-id": "1-1-0",
                     "te-tp-id": 10100,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                             "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {

                     "tp-id": "2-0-2",
                     "te-tp-id": 20002,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "2-2-0",
                     "te-tp-id": 20200,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "3-0-3",
                     "te-tp-id": 30003,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "3-3-0",
                     "te-tp-id": 30300,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "4-0-4",
                     "te-tp-id": 40004,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "4-4-0",
                     "te-tp-id": 40400,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "5-0-5",
                     "te-tp-id": 50005,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "5-5-0",
                     "te-tp-id": 50500,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "6-0-6",
                     "te-tp-id": 60006,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "6-6-0",
                     "te-tp-id": 60600,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "7-0-7",
                     "te-tp-id": 70007,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "7-7-0",
                     "te-tp-id": 70700,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "8-0-8",
                     "te-tp-id": 80008,
                     "te": {

                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "8-8-0",
                     "te-tp-id": 80800,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   }
                 ]
               }
             ]
           },
           {
             "network-types": {
               "te-topology": {}
             },
             "network-id": "abstract3",
             "provider-id": 201,
             "client-id": 600,
             "te-topology-id": "te-topology:abstract3",
             "node": [
               {
                 "node-id": "D3",
                 "te-node-id": "3.0.1.1",
                 "te": {
                   "te-node-attributes": {
                     "domain-id" : 3,
                     "is-abstract": [null],
                     "connectivity-matrices": {
                       "is-allowed": true,
                       "path-constraints": {
                         "bandwidth-generic": {
                           "te-bandwidth": {
                             "generic": [
                               {
                                 "generic": "0x1p10",
                               }

                             ]
                           }
                         }
                       },
                       "connectivity-matrix": [
                         {
                           "id": 107,
                           "from": "1-0-1",
                           "to": "7-7-0"
                         },
                         {
                           "id": 308,
                           "from": "3-0-3",
                           "to": "8-8-0"
                         },
                       ]
                     }
                   }
                 },
                 "termination-point": [
                   {
                     "tp-id": "1-0-1",
                     "te-tp-id": 10001,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                           }
                       ]
                     }
                   },
                   {
                     "tp-id": "1-1-0",
                     "te-tp-id": 10100,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                             "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "2-0-2",
                     "te-tp-id": 20002,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "2-2-0",
                     "te-tp-id": 20200,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "3-0-3",
                     "te-tp-id": 30003,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "3-3-0",
                     "te-tp-id": 30300,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "4-0-4",
                     "te-tp-id": 40004,
                     "te": {
                       "interface-switching-capability": [
                         {

                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "4-4-0",
                     "te-tp-id": 40400,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "5-0-5",
                     "te-tp-id": 50005,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "5-5-0",
                     "te-tp-id": 50500,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "6-0-6",
                     "te-tp-id": 60006,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "6-6-0",
                     "te-tp-id": 60600,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "7-0-7",
                     "te-tp-id": 70007,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "7-7-0",
                     "te-tp-id": 70700,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "8-0-8",
                     "te-tp-id": 80008,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   },
                   {
                     "tp-id": "8-8-0",
                     "te-tp-id": 80800,
                     "te": {
                       "interface-switching-capability": [
                         {
                           "switching-capability": "switching-otn",
                           "encoding": "lsp-encoding-oduk"
                         }
                       ]
                     }
                   }
                 ]
               }
             ]
           },
         ]
       }
     }
]]></artwork>
	</figure>
	</section></section>

	<section title="Security Considerations" anchor="sect-8"><t>
   The configuration, state, and action data defined in this document
   are designed to be accessed via a management protocol with a secure
   transport layer, such as NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>.
   The lowest NETCONF layer is the secure transport layer, and the
   mandatory-to-implement secure transport is Secure Shell (SSH)
   <xref target="RFC6242"/>.  The lowest RESTCONF layer is HTTPS, and the mandatory-
   to-implement secure transport is TLS <xref target="RFC8446"/>.</t>

	<t>
   The NETCONF access control model <xref target="RFC8341"/> provides the means to
   restrict access for particular NETCONF users to a preconfigured
   subset of all available NETCONF protocol operations and content.</t>

	<t>
   The model presented in this document is used in the interface
   between the Customer Network Controller (CNC) and Multi-Domain
   Service Coordinator (MDSC), which is referred to as CNC-MDSC
   Interface (CMI). Therefore, many security risks such as malicious
   attack and rogue elements attempting to connect to various ACTN
   components.  Furthermore, some ACTN components (e.g., MSDC)
   represent a single point of failure and threat vector and must also
   manage policy conflicts and eavesdropping of communication between
   different ACTN components.</t>

	<t>
   A number of configuration data nodes defined in this document are
   writable/deletable (i.e., "config true") These data nodes may be
   considered sensitive or vulnerable in some network environments.</t>

	<t>
   These are the subtrees and data nodes and their
   sensitivity/vulnerability:</t>

	<t><list style="symbols">
	<t>access-point-list:<list style="symbols">
    <t>access-point-id</t>

	<t>max-bandwidth</t>

	<t>avl-bandwidth</t>

	</list>
	</t>

	<t>vn-ap:<list style="symbols">
    <t>vn-ap-id</t>

	<t>vn</t>

	<t>abstract-node</t>

	<t>ltp</t>

	</list>
	</t>

	<t>vn-list<list style="symbols">
    <t>vn-id</t>

	<t>vn-topology-id</t>

	<t>abstract-node</t>

	</list>
	</t>

	<t>vn-member-id<list style="symbols">
    <t>src</t>

	<t>src-vn-ap-id</t>

	<t>dest</t>

	<t>dest-vn-ap-id</t>

	<t>connectivity-matrix-id</t>

	</list>
	</t>

	
	</list>
	</t>

	</section>

	<section title="IANA Considerations" anchor="sect-9"><t>
   This document registers the following namespace URIs in the IETF XML
   registry <xref target="RFC3688"/>:</t>

	<figure><artwork><![CDATA[
--------------------------------------------------------------------
URI: urn:ietf:params:xml:ns:yang:ietf-vn
Registrant Contact: The IESG.
XML: N/A, the requested URI is an XML namespace.
--------------------------------------------------------------------
]]></artwork>
	</figure>
	<t>
   This document registers the following YANG modules in the YANG
   Module Names registry <xref target="RFC6020"/>:</t>

	<figure><artwork><![CDATA[
   

--------------------------------------------------------------------
name:         ietf-vn                                       
namespace:    urn:ietf:params:xml:ns:yang:ietf-vn    
prefix:       vn  
reference:    RFC XXXX (TDB)     
--------------------------------------------------------------------
]]></artwork>
  </figure>
	</section>

	<section title="Acknowledgments" anchor="sect-10"><t>
   The authors would like to thank Xufeng Liu and Adrian Farrel for
   their helpful comments and valuable suggestions.</t>

	</section>

	</middle>

	<back>
<references title="Normative References">
  &RFC3688;
  &RFC6020;
  &RFC6241;
  &RFC6242;
  &RFC8040;
  &RFC8341;
  &RFC8446;

  &RFC8345;
	&I-D.ietf-teas-yang-te-topo;
	&I-D.ietf-teas-yang-te;
    </references>
    <references title="Informative References">
	&RFC7926;
	&RFC8453;
	&I-D.ietf-teas-te-service-mapping-yang;
	&I-D.ietf-teas-actn-pm-telemetry-autonomics;
	&I-D.ietf-ccamp-l1csm-yang;
  &RFC8466;
	&RFC8299;
	&RFC8309;
	&RFC8340;
	
	&RFC8342;
  &RFC8454;
	</references>
	<section title="Contributors Addresses" anchor="sect-contributors"><figure><artwork><![CDATA[
Qin Wu
Huawei Technologies
Email: bill.wu@huawei.com

Peter Park
KT
Email: peter.park@kt.com


Haomian Zheng
Huawei Technologies
Email: zhenghaomian@huawei.com

Xian Zhang
Huawei Technologies
Email: zhang.xian@huawei.com

Sergio Belotti
Nokia
Email: sergio.belotti@nokia.com

Takuya Miyasaka
KDDI
Email: ta-miyasaka@kddi.com
]]></artwork>
	</figure>
	</section>

	</back>

	</rfc>
	
